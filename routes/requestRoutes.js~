/**
 * @swagger
 * tags:
 *   name: Requests
 *   description: Foydalanuvchi support so'rovlari
 */

const express = require('express');
const router = express.Router();
const { verifyToken, isUser } = require('../middlewares/authMiddleware');
const requestController = require('../controller/requestController');

/**
 * @swagger
 * /api/requests:
 *   post:
 *     summary: Foydalanuvchi tomonidan yangi so'rov yuborish
 *     tags: [Requests]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - requestType
 *               - requestName
 *             properties:
 *               requestType:
 *                 type: string
 *                 enum: [Hardware, Software, Network]
 *               requestName:
 *                 type: string
 *               description:
 *                 type: string
 *               location:
 *                 type: string
 *     responses:
 *       201:
 *         description: So'rov yaratildi
 *       500:
 *         description: Server xatosi
 */
router.post('/', verifyToken, isUser, requestController.createRequest);

/**
 * @swagger
 * /api/requests/my:
 *   get:
 *     summary: Foydalanuvchining barcha so'rovlari
 *     tags: [Requests]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: So'rovlar ro'yxati
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 */
router.get('/my', verifyToken, isUser, requestController.getUserRequests);

module.exports = router;
